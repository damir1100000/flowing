version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  postgres-users:
    image: postgres:13
    environment:
      POSTGRES_USER: flowing
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user
    ports:
      - "5439:5432"

  postgres-orders:
    image: postgres:13
    environment:
      POSTGRES_USER: flowing
      POSTGRES_PASSWORD: password
      POSTGRES_DB: order
    ports:
      - "5438:5432"

  postgres-inventory:
    image: postgres:13
    environment:
      POSTGRES_USER: flowing
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventory
    ports:
      - "5437:5432"

  postgres-products:
    image: postgres:13
    environment:
      POSTGRES_USER: flowing
      POSTGRES_PASSWORD: password
      POSTGRES_DB: product
    ports:
      - "5436:5432"

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"

  user:
    build: ./user
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-users:5432/user
      SPRING_DATASOURCE_USERNAME: flowing
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres-users
      - kafka
    ports:
      - "8080:8080"

  product:
    build: ./product
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-products:5432/product
      SPRING_DATASOURCE_USERNAME: flowing
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres-products
      - kafka
    ports:
      - "8081:8080"

  order:
    build: ./order
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-orders:5432/order
      SPRING_DATASOURCE_USERNAME: flowing
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres-orders
      - kafka
    ports:
      - "8082:8080"

  inventory:
    build: ./inventory
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-inventory:5432/inventory
      SPRING_DATASOURCE_USERNAME: flowing
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres-inventory
      - kafka
    ports:
      - "8083:8080"

  notification:
    build: ./notification
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - redis
      - kafka
    ports:
      - "8084:8080"